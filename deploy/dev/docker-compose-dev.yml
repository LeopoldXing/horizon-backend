services:
  mysql:
    image: mysql:8.2.0
    container_name: horizon-dev-mysql
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: horizon
    ports:
      - "3306:3306"
    networks:
      - horizon-dev-network

  redis:
    image: redis:7.0.14
    container_name: horizon-dev-redis
    environment:
      - REDIS_PASSWORD=1234
    command: [ "redis-server", "--requirepass", "1234" ]
    ports:
      - "36379:6379"
    networks:
      - horizon-dev-network

  # ELK Stack
  elasticsearch:
    container_name: horizon-log-service-elasticsearch
    image: elasticsearch:8.14.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      # enable SSL
      # - xpack.security.enabled=true
      # - xpack.security.transport.ssl.enabled=true
      # - xpack.security.transport.ssl.verification_mode=certificate
      # - xpack.security.transport.ssl.key=/path/to/your/certificate.key
      # - xpack.security.transport.ssl.certificate=/path/to/your/certificate.crt
      # - xpack.security.transport.ssl.certificate_authorities=/path/to/your/ca.crt
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - es01-log-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - horizon-dev-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
  logstash:
    image: logstash:8.14.1
    container_name: horizon-log-service-logstash
    volumes:
      - ./monitoring/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "34560:4560"
      - "34561:4561"
      - "34562:4562"
      - "34563:4563"
    networks:
      - horizon-dev-network
    depends_on:
      - elasticsearch
      - kafka
  kibana:
    container_name: horizon-log-service-kibana
    image: kibana:7.17.21
    ports:
      - "5601:5601"
    volumes:
      - ./monitoring/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    healthcheck:
      test: ["CMD-SHELL", "curl -I http://localhost:5601 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - horizon-dev-network

  # Kafka
  zookeeper:
    container_name: horizon-zookeeper
    image: bitnami/zookeeper:3.8.4
    ports:
      - '22181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - horizon-dev-network
  kafka:
    container_name: horizon-kafka
    image: bitnami/kafka:3.6
    user: root
    ports:
      - '29092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=horizon-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - horizon-dev-network
    depends_on:
      - zookeeper

networks:
  horizon-dev-network:
    name: horizon-development-network

services:
  redis:
    container_name: horizon-redis
    image: redis:7.0.14
    environment:
      - REDIS_PASSWORD=1234
    command: [ "redis-server", "--requirepass", "1234" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    ports:
      - 36379:6379
    extends:
      file: common-test.yml
      service: horizon-base-config

  es01:
    container_name: horizon-log-service-es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    environment:
      - node.name=es01
      - cluster.name=horizon-log-service-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - es01-log-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
    extends:
      file: common-test.yml
      service: horizon-network-service

  es02:
    container_name: horizon-log-service-es02
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    environment:
      - node.name=es02
      - cluster.name=horizon-log-service-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    volumes:
#      - es02-log-data:/usr/share/elasticsearch/data
    ports:
      - "9201:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
    extends:
      file: common-test.yml
      service: horizon-network-service

  es03:
    container_name: horizon-log-service-es03
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    environment:
      - node.name=es03
      - cluster.name=horizon-log-service-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
#    volumes:
#      - es03-log-data:/usr/share/elasticsearch/data
    ports:
      - "9202:9200"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
    extends:
      file: common-test.yml
      service: horizon-network-service

  kibana:
    container_name: horizon-log-service-kibana
    image: kibana:7.17.21
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -I http://localhost:5601 || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-network-service

  account-db:
    container_name: horizon-account-db
    image: mysql:8.2.0
    ports:
      - 10004:3306
    environment:
      MYSQL_DATABASE: horizon
    extends:
      file: common-test.yml
      service: horizon-db-config

  transaction-db:
    container_name: horizon-transaction-db
    image: mysql:8.2.0
    ports:
      - 10005:3306
    environment:
      MYSQL_DATABASE: horizon
    extends:
      file: common-test.yml
      service: horizon-db-config

  bank-db:
    container_name: horizon-bank-db
    image: mysql:8.2.0
    ports:
      - 10000:3306
    environment:
      MYSQL_DATABASE: horizon
    extends:
      file: common-test.yml
      service: horizon-db-config

  user-db:
    container_name: horizon-user-db
    image: mysql:8.2.0
    ports:
      - 10001:3306
    environment:
      MYSQL_DATABASE: horizon
    extends:
      file: common-test.yml
      service: horizon-db-config

  dwolla-db:
    container_name: horizon-dwolla-db
    image: mysql:8.2.0
    ports:
      - 10002:3306
    environment:
      MYSQL_DATABASE: horizon
    extends:
      file: common-test.yml
      service: horizon-db-config

  plaid-db:
    container_name: horizon-plaid-db
    image: mysql:8.2.0
    ports:
      - 10003:3306
    environment:
      MYSQL_DATABASE: horizon
    extends:
      file: common-test.yml
      service: horizon-db-config

  configserver:
    container_name: horizon-config-server
    image: leopoldhsing2/horizon.config-server
    ports:
      - 9000:8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 5s
    environment:
      SPRING_PROFILES_ACTIVE: native
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  eureka-server:
    container_name: horizon-eureka-server
    image: leopoldhsing2/horizon.eureka-server
    ports:
      - 9002:8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 5s
    environment:
      SPRING_APPLICATION_NAME: eureka
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
    depends_on:
      configserver:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  gateway:
    container_name: horizon-gateway
    image: leopoldhsing2/horizon.gateway
    ports:
      - 9005:8080
    environment:
      SPRING_APPLICATION_NAME: "gateway"
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      HORIZON_URL_PATTERN_LOGIN_PATH: "https://horizon.discobroccoli.com/sign-in"
    depends_on:
      eureka-server:
        condition: service_healthy
      configserver:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  account:
    container_name: horizon-account
    image: leopoldhsing2/horizon.account
    ports:
      - 9007:8080
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      SPRING_APPLICATION_NAME: "account"
      SPRING_DATASOURCE_URL: "jdbc:mysql://horizon-account-db:3306/horizon"
    depends_on:
      account-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      configserver:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  transaction:
    container_name: horizon-transaction
    image: leopoldhsing2/horizon.transaction
    ports:
      - 9008:8080
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      SPRING_APPLICATION_NAME: "transaction"
      SPRING_DATASOURCE_URL: "jdbc:mysql://horizon-transaction-db:3306/horizon"
    depends_on:
      transaction-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      configserver:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  bank:
    container_name: horizon-bank
    image: leopoldhsing2/horizon.bank
    ports:
      - 9001:8080
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      SPRING_APPLICATION_NAME: "bank"
      SPRING_DATASOURCE_URL: "jdbc:mysql://horizon-bank-db:3306/horizon"
    depends_on:
      bank-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  user:
    container_name: horizon-user
    image: leopoldhsing2/horizon.user
    ports:
      - 9006:8080
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      SPRING_APPLICATION_NAME: "user"
      SPRING_DATASOURCE_URL: "jdbc:mysql://horizon-user-db:3306/horizon"
    depends_on:
      user-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  dwolla:
    container_name: horizon-dwolla
    image: leopoldhsing2/horizon.dwolla
    ports:
      - 9003:8080
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      SPRING_APPLICATION_NAME: "dwolla"
      SPRING_DATASOURCE_URL: "jdbc:mysql://horizon-dwolla-db:3306/horizon"
      DWOLLA_BASE_URL: ${DWOLLA_BASE_URL}
      DWOLLA_KEY: ${DWOLLA_KEY}
      DWOLLA_SECRET: ${DWOLLA_SECRET}
      DWOLLA_ENV: ${DWOLLA_ENV}
    depends_on:
      dwolla-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

  plaid:
    container_name: horizon-plaid
    image: leopoldhsing2/horizon.plaid
    ports:
      - 9004:8080
    environment:
      SPRING_PROFILES_ACTIVE: test
      SPRING_CONFIG_IMPORT: configserver:http://horizon-config-server:8080/
      SPRING_APPLICATION_NAME: "plaid"
      SPRING_DATASOURCE_URL: "jdbc:mysql://horizon-plaid-db:3306/horizon"
      PLAID_CLIENT_ID: "${PLAID_CLIENT_ID}"
      PLAID_SECRET: "${PLAID_SECRET}"
      PLAID_ENV: "${PLAID_ENV}"
    depends_on:
      plaid-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    extends:
      file: common-test.yml
      service: horizon-base-config

networks:
  horizon-test-network:
    driver: "bridge"
    name: "horizon-test-network"

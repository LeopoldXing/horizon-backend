services:
  zookeeper:
    container_name: horizon-zookeeper
    image: bitnami/zookeeper:3.8.4
    ports:
      - '22181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - pan-default-network
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.6
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_ZOOKEEPER_CONNECT=horizon-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: [ "CMD", "kafka-cluster.sh", "cluster-id", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 15s
    networks:
      - pan-default-network
    depends_on:
      - zookeeper
  init-kafka:
    image: bitnami/kafka:3.6
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - pan-default-network
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server localhost:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server localhost:9092 --create --if-not-exists --topic horizon-user --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server localhost:9092 --create --if-not-exists --topic horizon-gateway --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server localhost:9092 --create --if-not-exists --topic horizon-transaction --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server localhost:9092 --list
      "

networks:
  pan-default-network:
    name: pan-default-network
